{"ast":null,"code":"import { HttpEventType } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../file-upload.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/list\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nfunction InputMultFilesComponent_div_3_div_3_mat_list_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 12)(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function InputMultFilesComponent_div_3_div_3_mat_list_item_3_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const idx_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.onRemoveFileClickHandler(idx_r7));\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r6.name);\n  }\n}\nfunction InputMultFilesComponent_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"mat-list\", 9, 10);\n    i0.ɵɵtemplate(3, InputMultFilesComponent_div_3_div_3_mat_list_item_3_Template, 6, 1, \"mat-list-item\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.files);\n  }\n}\nfunction InputMultFilesComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 2, 3);\n    i0.ɵɵlistener(\"change\", function InputMultFilesComponent_div_3_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onXmlInputChangeHandler($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, InputMultFilesComponent_div_3_div_3_Template, 4, 1, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function InputMultFilesComponent_div_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const _r2 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(_r2.click());\n    });\n    i0.ɵɵtext(6, \" Adicionar Arquivos \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function InputMultFilesComponent_div_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSendClickHandler());\n    });\n    i0.ɵɵtext(8, \" Enviar Arquivos \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.files.length > 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.files.length === 0);\n  }\n}\nfunction InputMultFilesComponent_mat_spinner_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nexport class InputMultFilesComponent {\n  constructor(fileUploadService) {\n    this.fileUploadService = fileUploadService;\n    this.files = [];\n    this.loading = false;\n  }\n  onXmlInputChangeHandler(fileInputEvent) {\n    let filesToAdd = Array.from(fileInputEvent.target.files);\n    this.files.push(...filesToAdd);\n  }\n  onRemoveFileClickHandler(idxFileToRemove) {\n    this.files.splice(idxFileToRemove, 1);\n  }\n  onSendClickHandler() {\n    this.loading = true;\n    let confirmationCount = 0;\n    this.files.forEach(file => {\n      this.fileUploadService.upload(file).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          confirmationCount++;\n          if (confirmationCount === this.files.length) {\n            this.loading = false;\n            // setTimeout(() => this.loading = false, 500);\n          }\n        }\n      });\n    });\n  }\n}\n\nInputMultFilesComponent.ɵfac = function InputMultFilesComponent_Factory(t) {\n  return new (t || InputMultFilesComponent)(i0.ɵɵdirectiveInject(i1.FileUploadService));\n};\nInputMultFilesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputMultFilesComponent,\n  selectors: [[\"app-input-mult-files\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"input-mult-files-container\"], [4, \"ngIf\"], [\"type\", \"file\", \"hidden\", \"true\", \"onclick\", \"this.value=null\", \"accept\", \".xml\", \"multiple\", \"multiple\", 3, \"change\"], [\"xmlInput\", \"\"], [\"class\", \"file-list-container\", 4, \"ngIf\"], [1, \"buttons-container\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"hidden\", \"click\"], [1, \"file-list-container\"], [\"role\", \"list\"], [\"FilesToUpload\", \"\"], [\"role\", \"listitem\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"listitem\"], [\"matListItemLine\", \"\", 1, \"file-name\"], [\"mat-icon-button\", \"\", \"matListItemMeta\", \"\", \"color\", \"warn\", 1, \"delete-button\", 3, \"click\"]],\n  template: function InputMultFilesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Selecione um ou mais arquivos XML para a minera\\u00E7\\u00E3o de dados.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, InputMultFilesComponent_div_3_Template, 9, 2, \"div\", 1);\n      i0.ɵɵtemplate(4, InputMultFilesComponent_mat_spinner_4_Template, 1, 0, \"mat-spinner\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatButton, i3.MatIconButton, i4.MatList, i4.MatListItem, i4.MatListItemLine, i4.MatListItemMeta, i5.MatIcon, i6.MatProgressSpinner],\n  styles: [\".input-mult-files-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.input-mult-files-container[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%] {\\n  border: 1px solid gray;\\n  border-radius: 10px;\\n  margin: 20px 0;\\n}\\n.input-mult-files-container[_ngcontent-%COMP%]   .buttons-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin: 15px 0;\\n}\\n.input-mult-files-container[_ngcontent-%COMP%]   .buttons-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  padding: 15px;\\n}\\n.input-mult-files-container[_ngcontent-%COMP%]   mat-spinner[_ngcontent-%COMP%] {\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5wdXQtbXVsdC1maWxlcy9pbnB1dC1tdWx0LWZpbGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBQ0Y7QUFDRTtFQUNFLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBQ0o7QUFFRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGNBQUE7QUFBSjtBQUVJO0VBQ0UsdUJBQUE7RUFBQSxrQkFBQTtFQUNBLGFBQUE7QUFBTjtBQUlFO0VBQ0UsWUFBQTtBQUZKIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LW11bHQtZmlsZXMtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gIC5pbnB1dC1jb250YWluZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICB9XHJcblxyXG4gIC5idXR0b25zLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcblxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbWF0LXNwaW5uZXIge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,sBAAsB;;;;;;;;;;;ICY5CC,yCAAwE;IAC9BA,YAAa;IAAAA,iBAAO;IAC5DA,kCAAmH;IAAxCA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA6B;IAAA,EAAC;IAChHA,gCAAU;IAAAA,sBAAM;IAAAA,iBAAW;;;;IAFWA,eAAa;IAAbA,kCAAa;;;;;IAH3DA,8BAA0D;IAEtDA,yGAKgB;IAClBA,iBAAW;;;;IANuCA,eAAU;IAAVA,sCAAU;;;;;;IAZhEA,2BAA8B;IAM1BA;MAAAA;MAAA;MAAA,OAAUA,sDAA+B;IAAA,EAAC;IAL5CA,iBAQE;IACFA,8EASM;IACNA,8BAA+B;IACcA;MAAAA;MAAA;MAAA,OAASA,0BAAgB;IAAA,EAAC;IACnEA,oCACF;IAAAA,iBAAS;IACTA,iCAAuG;IAA/BA;MAAAA;MAAA;MAAA,OAASA,2CAAoB;IAAA,EAAC;IACpGA,iCACF;IAAAA,iBAAS;;;;IAhBuBA,eAAsB;IAAtBA,8CAAsB;IAcZA,eAA6B;IAA7BA,kDAA6B;;;;;IAK3EA,8BAA8B;;;ADtBhC,OAAM,MAAOC,uBAAuB;EAElCC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAErC,UAAK,GAAW,EAAE;IAClB,YAAO,GAAY,KAAK;EAHmC;EAK3DC,uBAAuB,CAACC,cAAmB;IACzC,IAAIC,UAAU,GAAWC,KAAK,CAACC,IAAI,CAACH,cAAc,CAACI,MAAM,CAACC,KAAK,CAAC;IAChE,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,GAAGL,UAAU,CAAC;EAChC;EAEAM,wBAAwB,CAACC,eAAuB;IAC9C,IAAI,CAACH,KAAK,CAACI,MAAM,CAACD,eAAe,EAAE,CAAC,CAAC;EACvC;EAEAE,kBAAkB;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAIC,iBAAiB,GAAG,CAAC;IACzB,IAAI,CAACP,KAAK,CAACQ,OAAO,CAACC,IAAI,IAAG;MACxB,IAAI,CAAChB,iBAAiB,CAACiB,MAAM,CAACD,IAAI,CAAC,CAACE,SAAS,CAACC,KAAK,IAAG;QACpD,IAAIA,KAAK,CAACC,IAAI,KAAKxB,aAAa,CAACyB,QAAQ,EAAE;UACzCP,iBAAiB,EAAE;UACnB,IAAIA,iBAAiB,KAAK,IAAI,CAACP,KAAK,CAACe,MAAM,EAAE;YAC3C,IAAI,CAACT,OAAO,GAAG,KAAK;YACpB;;;MAGN,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;;AA9BWf,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpC9B,8BAAwC;MAClCA,sFAA4D;MAAAA,iBAAK;MACrEA,wEA4BM;MACNA,wFAA8B;MAChCA,iBAAM;;;MA9BEA,eAAsB;MAAtBA,2CAAsB;MA6BdA,eAAa;MAAbA,kCAAa","names":["HttpEventType","i0","InputMultFilesComponent","constructor","fileUploadService","onXmlInputChangeHandler","fileInputEvent","filesToAdd","Array","from","target","files","push","onRemoveFileClickHandler","idxFileToRemove","splice","onSendClickHandler","loading","confirmationCount","forEach","file","upload","subscribe","event","type","Response","length","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\marki\\Documents\\Estudos\\dataminer\\src\\main\\frontend\\src\\app\\input-mult-files\\input-mult-files.component.ts","C:\\Users\\marki\\Documents\\Estudos\\dataminer\\src\\main\\frontend\\src\\app\\input-mult-files\\input-mult-files.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FileUploadService } from \"../file-upload.service\";\nimport { HttpEventType } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-input-mult-files',\n  templateUrl: './input-mult-files.component.html',\n  styleUrls: ['./input-mult-files.component.scss'],\n})\nexport class InputMultFilesComponent {\n\n  constructor(private fileUploadService: FileUploadService) {}\n\n  files: File[] = [];\n  loading: Boolean = false;\n\n  onXmlInputChangeHandler(fileInputEvent: any) {\n    let filesToAdd: File[] = Array.from(fileInputEvent.target.files);\n    this.files.push(...filesToAdd);\n  }\n\n  onRemoveFileClickHandler(idxFileToRemove: number) {\n    this.files.splice(idxFileToRemove, 1);\n  }\n\n  onSendClickHandler() {\n    this.loading = true;\n    let confirmationCount = 0;\n    this.files.forEach(file => {\n      this.fileUploadService.upload(file).subscribe(event => {\n        if (event.type === HttpEventType.Response) {\n          confirmationCount++;\n          if (confirmationCount === this.files.length) {\n            this.loading = false;\n            // setTimeout(() => this.loading = false, 500);\n          }\n        }\n      })\n    });\n  }\n}\n","<div class=\"input-mult-files-container\">\n  <h2>Selecione um ou mais arquivos XML para a mineração de dados.</h2>\n  <div *ngIf=\"loading == false\">\n    <input\n      #xmlInput\n      type=\"file\"\n      hidden=\"true\"\n      onclick=\"this.value=null\"\n      (change)=\"onXmlInputChangeHandler($event)\"\n      accept=\".xml\"\n      multiple=\"multiple\"\n    />\n    <div class=\"file-list-container\" *ngIf=\"files.length > 0\">\n      <mat-list role=\"list\" #FilesToUpload>\n        <mat-list-item role=\"listitem\" *ngFor=\"let file of files; index as idx\">\n          <span matListItemLine class=\"file-name\">{{file.name}}</span>\n          <button mat-icon-button matListItemMeta color=\"warn\" class=\"delete-button\" (click)=\"onRemoveFileClickHandler(idx)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </div>\n    <div class=\"buttons-container\">\n      <button mat-stroked-button color=\"primary\" (click)=\"xmlInput.click()\">\n        Adicionar Arquivos\n      </button>\n      <button mat-raised-button color=\"primary\" [hidden]=\"files.length === 0\" (click)=\"onSendClickHandler()\">\n        Enviar Arquivos\n      </button>\n    </div>\n  </div>\n  <mat-spinner *ngIf=\"loading\"/>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}