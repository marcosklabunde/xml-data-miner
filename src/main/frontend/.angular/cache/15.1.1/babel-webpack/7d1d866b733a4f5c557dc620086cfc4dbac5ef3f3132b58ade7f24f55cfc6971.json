{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FileUploadService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.response = \"\";\n  }\n  uploadFiles(files) {\n    this.httpClient.post('http://127.0.0.1:8080/upload', files, {\n      observe: 'response'\n    }).subscribe(response => {\n      if (response.status === 200) {\n        this.response = 'File uploaded successfully';\n      } else {\n        this.response = 'File not uploaded successfully';\n      }\n      console.log(this.response);\n    });\n  }\n}\nFileUploadService.ɵfac = function FileUploadService_Factory(t) {\n  return new (t || FileUploadService)(i0.ɵɵinject(i1.HttpClient));\n};\nFileUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileUploadService,\n  factory: FileUploadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,aAAQ,GAAW,EAAE;EAFyB;EAI9CC,WAAW,CAACC,KAAa;IACvB,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,8BAA8B,EAAED,KAAK,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC,CACjFC,SAAS,CAAEC,QAAQ,IAAI;MACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,IAAI,CAACD,QAAQ,GAAG,4BAA4B;OAC7C,MAAM;QACL,IAAI,CAACA,QAAQ,GAAG,gCAAgC;;MAElDE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;IAC5B,CAAC,CACF;EACL;;AAjBWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAY,SAAjBZ,iBAAiB;EAAAa,YAFhB;AAAM","names":["FileUploadService","constructor","httpClient","uploadFiles","files","post","observe","subscribe","response","status","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marki\\Documents\\Estudos\\dataminer\\src\\main\\frontend\\src\\app\\file-upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  response: string = \"\";\n\n  uploadFiles(files: File[]) {\n    this.httpClient.post('http://127.0.0.1:8080/upload', files, { observe: 'response' })\n      .subscribe((response) => {\n          if (response.status === 200) {\n            this.response = 'File uploaded successfully';\n          } else {\n            this.response = 'File not uploaded successfully';\n          }\n          console.log(this.response);\n        }\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}